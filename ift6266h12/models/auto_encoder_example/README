Here is an example of how to use pylearn2 for stacked layer of auto-encoders (build based on pylearn/pylearn2/scripts/tautoencoder_example).

1-first make a toy dataset by running make_garbage_dataset.py
2-Train the model on layer1 by running train.py dae1.yaml
3-Save layer1 representations as npy file by running train.py dae2.yaml
4-Train model on layer2 by running train.py dae3.yaml
(optional: you can repeat step 3 by modifying file names for saving layer2 output)


Notes:

-Look at  pylearn/pylearn2/scripts/train_example/README for detail documentation on how to use train.py and yaml files.
-Add pylearn/pylearn2/scripts/train.py to your PYTHONPATH
-The reason for manual training of each layer with separate script is that, pyelarn2 does not support training of stacked layers yet.
-The reason for having separate scripts for saving the representation is that, pylearn2 yaml parser check for existences of input files before running them.
